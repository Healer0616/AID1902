一.JavaScript介绍
    面向对象的编程语言，也称为浏览器解释型语言。嵌入到html文件中交给浏览器解释和执行。
    组成：
        1.核心语法（ECMAScript5）
        2.BOM（Browser Object Model）浏览器对象模型，提供操作窗口的方法
        3.DOM（Document OBject Model）文档对象模型，提供操作页面元素的方法
        4.Ajax
        5.JQuery（JS工具）

二.JS使用
    1.元素绑定事件的方式书写JS代码
      事件：用户的行为或元素的状态。例：onclick(单击)
      事件处理：事件发生后的响应
      语法：将事件的名称以标签属性的方式绑定到元素上，属性值即为相关的JS语句
      例：<div onclick="">xxx<div>
      JS语句：
        alert(""); 警告框
        console.log("",""); 控制台输出
        prompt(""); 带输入框的弹框
        document.write(""); 网页写入，正常情况下，代码书写位置即为执行位置，
        write()表示动态在body中写入内容，可以识别标签语法；如果通过元素绑定事件方式执行写入，会造成页面重写。
    2.内嵌JS代码
        借助<script></script>嵌入JS代码，可以书写任意多次，书写在任意位置。不同的书写位置会影响代码执行的结果。
        书写位置即为JS代码的执行位置
    3.外链
        创建外部的JS文件（.js），在HTML中使用<script src=""></script>引入,注意script标签只能内嵌或外链二选一。

三.JS语法规范
    1.JS严格区分大小写
    2.JS语句可以使用;作为结束的标志，也可以不写
        alert()  console.log()
    3.JS注释
        //单行注释
        /*多行注释*/

四.变量与常量
    1.变量
      变量用于存储在程序运行过程可以随时修改的数据。
      使用var关键字创建变量
      注意：
        1）变量使用var关键字声明，未赋值，默认为undefined
        2）省略var关键字给变量赋值，变量可以正常使用，影响变量的作用域。不建议省略
        3）变量未声明未赋值，直接使用，报错
            例：console.log(a); //a is not defined
    2.常量
      常量用于存储一经定义就不能修改的数据。
      使用const关键字创建常量，必须声明并赋值。
      命名规范：
        1）变量名，常量名，函数名，方法名 自定义，可以由数字，字母，下划线和$组成
           禁止与关键字冲突。尽量见名知意，多个单词组成采用小驼峰。（userName,goodsType）
        2）尽量使用小写字母表示，特殊情况区分。常量名一般采用全大写字母表示，与变量区分
      练习：定义变量，常量，计算周长和面积
      保留小数位：
        toFixed(n)保留n位小数

五.数据类型
    检测数据类型，使用typeof num / typeof (num)
    1.值类型（基础数据类型）
        1）number数值型
            1.整数
                var a = 100;
                //八进制以0为前缀
                var b = 015; //13
                //十六进制以0x为前缀
                var c = 0x15; //21
                注意：不管使用哪一种进制表示，最终在控制台中都以十进制输出
            2.小数
                var n = 1.56;
                科学计数法：var k = 1.56e3;
                e表示10为底，3表示次方数，1.56 * 10（3）
        2）string 字符串
            使用引号表示
        3）boolean 布尔类型
            只有true/false两个值
        4）undefined
            特殊值，变量声明未赋值时，默认值为undefined
        5）null
            空值，一般用于解除对象的引用。

    2.对象（引用数据类型）
        对象是由属性和方法组成，使用点语法访问。
        函数，数组，字符串，日期，自定义对象

六.数据类型转换
    1.自动类型转换
        1）数学运算符 + - * / %(取余)
        2）运算规则：
            1.字符串与其他数据类型做+运算，将非字符串自动转为字符串做拼接，结果仍为字符串
            2.其他情况下，一律将操作数转换为number参与数学运算,如果转换number失败，
              则变成NaN参与数学运算，结果一律为NaN
    2.强制类型转换
        1）转换字符串
            num.toString();将变量num转换为字符串并返回
        2）转换number
            1.整体转number
                Number(n); 将变量n转换为number
            2.解析整数或解析number部分
                parseInt(n)解析整数部分
                parseFloat(n)解析整数+小数
                解析过程：先将数据转换成字符串；从前向后逐位对每一个字符转number，
                        转换失败则停止向后解析，直接返回结果。
        3）转换布尔
            Boolean(n)
            除"零"值以外，其他所有的值都为真

七.运算符
    1.赋值运算符 =
    2.算数运算符 + - * / %
    3.复合运算符 += -= *= /= %=
        例：a += 10; //a = a + 10;
    4.自增，自减运算符 ++ --
        作用：在变量自身值的基础上+1/-1
        使用：
            1）单独与变量结合，做前缀或后缀都可以，包含自动类型转换，在自身number值的基础上+1
                例：
                  var a = "10";
                  a++;//11
            2）与其他运算符结合使用，做前缀表示先自增，做后缀表示后自增
                思考：
                    var n = 5;
                    var r = n++ + ++n + n++ + ++n + n;
                    r? n?

























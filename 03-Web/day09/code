一.函数
    1.保存代码或封装功能
    2.实现：
        使用function关键字声明函数
        function 函数名(参数列表){
            //函数体
            return 返回值;
        }
        函数调用：
            函数名(参数);
    3.作用域
        作用域分为全局作用域和函数作用域
        1）全局变量（函数）
            全局作用域下创建的变量或函数，在任意地方都能访问和使用。所有省略var关键字创建的变量一律为全局变量。
        2）局部变量
            函数作用域中使用var关键字创建的变量都为局部变量
    4.匿名函数
        1）匿名函数自执行，构建局部作用域。
            (函数自身)(实参);
        2）定义变量接收匿名函数，变量名即为函数名
        练习：
            改版星期计算，主体功能封装函数，通过点击调用(onclick="fun()");
            闰年判断封装成函数

二.数组
    1.创建
    2.操作数组元素
        数组会自动为每一位元素分配下标，从0开始
    3.数组属性
        length：数组长度
    4.遍历数组
        1）普通循环
        2）for-in
        练习：
            1.循环接收用户输入，存储到数组中，直至输入"exit"结束循环，控制台输出数组
            2.定义包含若干number值的数组，求数组中的最大值
    5.数组方法
        1）push(data)
            在数组的末尾添加1个或多个元素
            返回添加后的数组长度
        2）pop()
            移除数组的末尾元素
            返回被删除的元素
        3）unshift(data)
            在数组的头部添加1个或多个元素
        4）shift()
            移除数组的头部元素
        5）toString()
            将数组转换为字符串，返回转换后的结果
        6）join(param)
            参数用于指定为字符串，参数用于指定数组元素之间的连接符，
            默认为逗号连接（同toString()）
        7）reverse()
            返回数组（倒序重排），对当前数组结构的调整。
        8）sort()
            默认按照unicode编码升序排列
        9）forEach(function (){})
            自带的遍历方法
    6.二维数组
        例：
          var arr = [[1],[2,3],[4,5,6]];
          arr1[1][1]; //获取 3

三.字符串
    1.创建
    2.特点
        字符串采用数组结构存储，自动为每一位字符分配下标，可以使用下标访问每位字符（同数组操作元素）
        例：
            var s1 = "hello";
            console.log(s1[1]);
    3.属性
        length：字符串长度
    4.方法
        1）字母转换大小写
            toUpperCase() 转换大写
            toLowerCase() 转换小写
            作业：
                模拟验证码：
                    1.创建数据源，包含大小写字母，包含数字
                    2.随机生成4位验证码
                        Math.random()生成[0,1)随机小数
                    3.提示输入（prompt） 不区分大小写
                    4.验证输入结果
                    -------------------------------------
                    5.主体功能封装函数，按钮点击调用
                    6.生成验证码封装成函数，允许指定验证码的长度
            练习：
                1.循环接收用户输入，保存到数组中，exit结束
                  使用数组相关方法实现
                2.创建数组，包含三个number值，按照从小到大的顺序排列
                3.定义数据源，接收用户输入，查询数组中是否存在，存在即返回下标，不存在返回-1
                4.代码实现十进制转二进制
                    除2取余直至商为0，余数倒序排列
                    例：
                        3/2 = 1...1
                        1/2 = 0...1

































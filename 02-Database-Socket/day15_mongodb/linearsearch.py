# A查找算法
# 1.
# 顺序查找
# 从待查找数据中第一元素开始，逐个对每个元素值与要查找的内容进行对比，如果相等，则查找成功；
# 如果到最后仍未找到则查找失败
#
# 小练习：
# 扑克牌54，只取红桃13张用1 - 13，洗牌后翻面朝上，排成一排。找到红桃7.怎么找？

# 1.查找位置算法：用索引

# 原始数据
# [12,10,1,3,5,9,11,6,2,4,8,7,13]
# # 待查找数据key - 7
def linear(value,key):
    # 获取所有数据
    for i in range(len(value)):
        # 对比取出数据与待查找数据
        if value[i] == key:
            # 查找成功,返回当前下标值
            return i+1
    # 查找完数据仍未找到
    # 返回非法下标值
    return -1

if __name__ == "__main__":
    # 原始数据 value
    value = [12,10,1,3,5,9,11,6,2,4,8,7,13]
    # 待查找数据key - 7
    key = 7
    # 调用查找函数
    res = linear(value,key)
    if res == -1:
        # 查找事变
        print("查找失败")
    else:
        # 查找成功
        print("查找成功",res)

        print((0+11)//2)


























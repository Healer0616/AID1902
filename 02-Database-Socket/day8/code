

http响应（response）
1.响应格式：响应行，响应头，空行，响应体

2.响应行：反馈基本的响应情况
    HTTP/1.1    200      ok
    协议版本     响应码    附加信息

    响应码: 1xx 提示信息，请求被接受
           2xx 响应成功
           3xx 响应需要进一步处理
           4xx 客户端错误
           5xx 服务端错误

3.响应头：对响应内容的描述
  Content-Type：text/html

4.空行：

5.响应体：响应的主体内容信息

IO
1.定义：在内存中存在数据交换的操作认为是IO操作
  e.g. 和终端交互： input  print
       和磁盘交互： read   write
       和网络交互： recv   send

  IO密集型：在程序中存在大量的IO，而cpu运算较少，消耗CPU资源小，耗时长，效率不高。

  计算密集：在运算中存在大量计算操作，IO行为较少，cpu消耗大，执行速度快。

IO模型：阻塞IO，非阻塞IO，IO多路复用

阻塞IO
定义：在执行IO操作时由于不满足某些条件形成的阻塞形态。阻塞IO时IO的默认行为。

效率：阻塞IO是一种效率很低的IO,逻辑简单

阻塞情况
  *因为某种条件没有达到形成的阻塞
  e.g. 


非阻塞IO
定义：通过修改IO的属性行为，使原本阻塞的IO变为非阻塞的状态

设置套接字为非阻塞IO
socket.setblocking(bool)
功能：设置套接字为非阻塞IO
参数：True表示套接字IO阻塞，False表示非阻塞

设置超时检测：阻塞等待指定的时间，超时后则不再阻塞

sockfd.settimeout(sec)
功能：设置套接字超时时间
参数：超时时间

IO多路复用
定义：同时监控多个IO事件，当哪个IO事件准备就绪就执行哪个IO。
     以此形成可以同时处理多个IO的行为，避免一个IO阻塞造成的其他IO无法执行，
     提高IO执行效率。

具体方案：
  select：windows  Linux  unix
  poll：Linux  unix
  epoll：Linux

Python实现：import select 

python实现IO多路复用
  select方法
  rs,ws,xs = select(rlist,wlist,xlist[,timeout])
  功能：监控多个IO事件，阻塞等待IO发生
  参数：rlist：列表 存放关注的等待发生的IO事件
       wlist：列表 存放要主动处理的IO事件
       xlist：列表 存放发生异常是要处理的IO
       timeout：超时时间

  返回值: rs 列表 rlist 中准备就绪的IO
         ws 列表 wlist 中准备就绪的IO
         xs 列表 xlist 中准备就绪的IO
  
  * wlist中如果有IO事件，则select会立即返回给ws
  * 处理IO事件过程中不要出现死循环等长期占有服务端情况
  * IO多路复用消耗资源少,效率较高

位运算
定义：将整数转换为二进值，按二进值位进行运算
运算符号： &  按位与
         |  按位或
         ^  按位异或
         << 左移
         >> 右移

e.g. 14 --> 1110
     19 --> 10011
    #一0则0
     14 & 19 = 00010 = 2
    #一1则1
     14 | 19 = 11111 = 31
    #相同为0不同为1
     14 ^ 19 = 11101 = 29
    #向左移动右侧补0
     14 << 2 = 111000 = 56
    #向右移动去掉低位
     19 >> 2 = 100 = 4

作业：1.巩固http协议内容
     2.复习函数的使用（设计，参数）
     3.使用select 完成一个服务端，要求将从客户端发来信息写入到一个文件日志中
       同时服务端接受终端输入内容，也写入到该日志中。
一.PIP的使用

1.作用：管理python的标准第三方库

2.安装：sudo apt-get install python3-pip

3.常用命令

* 安装软件包：pip3 install [package]

* 查看系统python包：pip3 list

* 在python软件包中所搜：pip3 search [name]

* 查看软件包信息：pip3 show [package]

* 升级软件包：pip3 install --upgrade [package]

* 卸载软件包：pip3 uninstall [package]

* 导出软件包环境：pip3 freeze > requirements.txt

* 使用文档自动安装python环境：pip3 install -r requirements.txt


二.项目基础

1.软件项目：具有一定完整功能的工程，可能包含软件，甚至结合硬件。

2.应用层开发

    前端，客户端，前台：和用户直接交互

    要求：* 良好的用户体验
         * 全面方便的功能使用
         * 效率和优化

    后端，服务端，后台：请求处理，逻辑和数据处理

    要求：* 更高的并发量
         * 更快的处理速度
         * 更强的安全性

三.项目开发流程

    1.需求分析：确定用户真实需求

        * 确定用户真实需求和项目基本功能
        * 确定项目的可行性和难度
        * 完成需求分析文档，进行确认

    2.概要设计：对项目进行整体设计，确定技术架构

        * 确定项目原型和整体架构
        * 功能模块分析，确定方向和思路
        * 完成项目规划和分工
        * 形成概要设计文档，指导开发

    3.详细设计和编码：代码编写和代码设计

        * 项目模块具体设计
        * 编码测试
        * 技术攻关
        * 完成详细设计文档

    4.项目测试：对项目功能进行测试

        * 项目的功能测试
        * 对项目进行修改完善
        * 完成测试报告

    5.项目发布

        * 项目提交发布
        * 完成项目说明文档

    6.后期维护升级

        * bug修改
        * 产品的升级迭代

四.注意事项

    1.文档编写的重要性
    2.项目计划的重要性
    3.项目中的冲突解决

五.项目工具使用推荐

    1.文档编写：Word  markdown  ppt
    2.流程图：Visio  mindmanager  xmind
    3.项目管理工具：project
    4.代码管理：git  svn

六.网络电子词典

    1.功能说明
        【1】用户可以登录和注册
            * 登录凭借用户名，密码即可
            * 注册要求用户必须填写用户名密码，其他内容自己拟定
            * 用户名要求不能重复
            * 用户注册信息需要长期保存

        【2】可以通过print打印基本的命令提示，在客户端输入
            * 程序分为客户端和服务端两部分
            * 要求可以多个客户端同时在线操作
            * 客户端负责请求发送和结果呈现，服务端负责逻辑数据处理

        【3】客户端启动后即进入一级界面，功能选项包含：登录  注册  退出
            * 选择登录输入用户名密码，登录成功进入二级界面
            * 选择注册输入相应信息，注册成功可以返回一级界面，也可以直接进入二级界面
            * 退出即退出客户端

        【4】二级界面功能如下：查单词，查看历史记录，注销
            * 选择查单词即可以循环输入单词，得到单词的解释，输入##表示结束单词查询
            * 选择历史记录，即得到当前用户最近10条单词查询记录，得到的内容包括：姓名，单词，时间
            * 选择注销即返回一级界面

    2.单词表
        * 每个单词占一行
        * 单词按照从小到大排列
        * 单词和解释之间一定有空格

    3.操作步骤
        【1】确定并发方案，使用的套接字，细节确定，使用数据库查词还是文本查询

            多进程，tcp

        【2】创建数据库

            用户表：id  name  passwd
            历史记录表：id  name  word  time
            单词表：id  word  mean

            1.创建数据库：create database dict default charset=utf8;

            2.创建用户表：create table user(id int primary key auto_increment,
                                          name varchar(32) not null,
                                          passwd varchar(16) default '000000');

            3.创建历史记录表：create table hist(id int primary key auto_increment,
                                              name varchar(32) not null,
                                              word varchar(32) not null,
                                              time varchar(64));

            4.创建单词表：create table words(id int primary key auto_increment,
                                           word varchar(32),
                                           mean text,
                                           index(word));

        【3】结构的设计：选择封装方法，客户端和服务端的工作流程，具体几个功能模块

            函数封装，注册，登录，查词，历史记录

        【4】完成通信的搭建

        【5】具体功能

            1.注册
                客户端：输入注册信息
                       将信息发送给服务器
                       得到反馈
                服务端：接收请求，判断请求类型
                       判断注册是否成功，插入数据
                       反馈结果给客户端

            2.登录
                客户端：输入登录信息
                       将信息发送给服务器
                       得到服务器反馈
                       如果登录成功进入二级界面
                服务端：接收请求
                       判断是否允许登录
                       反馈结果

            3.查词
                服务端：接收请求
                       插入历史记录
                       单词查询
                       将结果返回给客户端

            4.历史记录

cookie:
    import getpass

    passwd = getpass.getpass()
    功能：隐藏终端输入内容



























